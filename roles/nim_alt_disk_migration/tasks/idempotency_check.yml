---
############################################################
# NOTE: idempotency check
# 1. make sure that the OS level of the target LPAR is not
# higher or equal to the fileset level of the specified
# lpp_source. IF IT IS then we should not go any further in
# the role as there is no need, the client LPAR is already
# at the desired release level or higher
# 2. make sure that there is already no alt_inst_rootg created
# in the client LPAR (NOT IMPLEMENTED)
#
# PREREQUISITE TASKS:
# This role will be using previously processed information
# from the earlier tasks as to not parse and fetch them again
# - the get_oslevel.yml task will have provided us the current
# OS level of the client LPAR
############################################################

############################################################
# NOTE: this check will be using the kernel fileset 
# bos.mp64 version to represent the release level of the 
# lpp_source
############################################################
- name: "Query bos.mp64.rte fileset {{ lpp_source }}"
  shell: "nim -o showres {{ lpp_source }} | grep 'bos.mp64'"
  changed_when: false
  register: lpp_source_query
  failed_when:
    - lpp_source_query.rc != 0
    - lpp_source_query.stderr != ''

- name: "Check if 'bos.mp64 is in in {{ lpp_source }}"
  fail:
    msg: "Fileset 'bos.alt_disk_install.rte' not in in {{ lpp_source }}" 
  when: "lpp_source_query.stdout == ''"

- block:
    - set_fact:
        lpp_source_fileset_level_pattern: "(\\s+bos\\.mp64\\s+)([0-9\\.]+)"
    - set_fact:
        lpp_source_fileset_level: "{{ lpp_source_query.stdout |
          regex_search(lpp_source_fileset_level_pattern, '\\2') | join('\n') }}"

- debug:
    msg: >
     '{{ lpp_source }} is at level '{{ lpp_source_fileset_level }}'


- name: "Preprocess 'bos.mp64' fileset release level"
  block:
    - set_fact:
        lpp_source_major_num: "{{ lpp_source_fileset_level.split('.')[0] }}"
        lpp_source_minor_num: "{{ lpp_source_fileset_level.split('.')[1] }}"
    - set_fact:
        lpp_source_fileset_level: "{{ lpp_source_major_num + lpp_source_minor_num + '00' }}"

- name: "Determine if we need to migrate {{ nim_client }}"
  block:
    - debug:
        msg: "{{ nim_client }} is already at {{ lpp_source_fileset_level }} or higher"

    - meta: end_play
  when: client_oslevel | int >= lpp_source_fileset_level | int
