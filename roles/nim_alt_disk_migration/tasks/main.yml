# Copyright (c) IBM Corporation 2020
---
############################################################
############################################################

- name: "Fail if a NIM client LPAR is not specified"
  fail:
    msg: "NIM client LPAR to be migrated is not specified"
  when: nim_client is not defined
- debug: msg="{{ nim_client }} specified to be migrated"

############################################################
############################################################

- name: "Verify NIM master and client connection"
  include_tasks: "validate_nim_connection.yml"
- debug: msg="NIM master and clients connectiotn validation complete"

############################################################
############################################################

- name: "Fetch client oslevel"
  include_tasks: "get_oslevel.yml"
  when: nim_client is defined

############################################################
############################################################

- name: "Fail if a NIM LPP resource is not specified"
  fail:
    msg: "NIM LPP resource not specified"
  when: lpp_source is not defined
- debug: msg="LPP resource {{ lpp_source }} specified for migration"

############################################################
############################################################

- name: "Check if we still need to migrate"
  include_tasks: "idempotency_check.yml"
- debug: msg="Proceed to migration"

############################################################
############################################################

- name: "Verify if alt_disk_install.rte fileset is present"
  include_tasks: "validate_alt_disk_install_fileset.yml"
- debug: msg="Fileset alt_disk_install.rte presence validation passed"

############################################################
# NOTE: specifying SPOT resource is optional, if not given
# then NIM master will generate corresponding SPOT resource
# from the specified LPP resource.
############################################################

- name: "Create SPOT resource if not specified"
  include_tasks: "create_spot.yml"
  when: spot is not defined
- debug: msg="SPOT resource {{ spot }} specified for migration"

############################################################
############################################################

- name: "Fail if neither the disk_name or disk_size_policy
        is specified"
  fail:
    msg: "A 'disk_name' or 'disk_size_policy' must be specified"
  when: (target_disk is not defined) or
        (target_disk.disk_name is not defined and target_disk.disk_size_policy is not defined)

- name: "Verify and select target disk used for alternate disk migration"
  block:
    - set_fact:
        target_disk_force: "{{ target_disk.force }}"
      when: target_disk.force is defined

    - block:
        - ibm.power_aix.internal.nim_select_target_disk:
            nim_client: "{{ nim_client }}"
            target_disk: "{{ target_disk.disk_name }}"
            force: "{{ target_disk_force }}"
          register: target_disk_selection

        - set_fact:
            target_disk: "{{ target_disk_selection.target_disk }}"
            target_disk_valid: "{{ target_disk_selection.valid }}"
      when: target_disk.disk_name is defined

    - block:
        - ibm.power_aix.internal.nim_select_target_disk:
            nim_client: "{{ nim_client }}"
            target_disk_policy: "{{ target_disk.disk_size_policy }}"
            force: "{{ target_disk_force }}"
          register: target_disk_selection

        - set_fact:
            target_disk: "{{ target_disk_selection.target_disk }}"
            target_disk_valid: "{{ target_disk_selection.valid }}"
      when:
        - target_disk.disk_size_policy is defined
        - target_disk.disk_name is not defined

    - fail:
        msg: "No valid target disk can be used to create an alternate disk copy"
      when: not target_disk_valid
- debug: msg="{{ target_disk }} of {{ nim_client }} will be used to
              create an alternate disk copy"

#############################################################
#############################################################

- name: "Verify that the specfied physical volume availability"
  include_tasks: "validate_pv.yml"
  when: target_disk is defined

#############################################################
#############################################################

- name: "Verify that the client LPAR is at least a Power8 machine"
  include_tasks: "validate_min_power_level.yml"
- debug: msg="{{ nim_client }} has at least a PowerPC_Power8 processor"

############################################################
############################################################

############################################################
# - asynchronous action and polling
#   large timeout: nimadm takes 2-3 hours to complete
#   migration in normal case. The timeout (async)
#   is set up to 4 hours, which is high enough to not
#   cause "check on it later" task to fail
#   or no longer exist error.
#
#   poll = 0 to start the task and immediately move on
#   to the next one without waiting a result. The nimadm
#   task will run until it either complete, fail or timeout.
############################################################

- name: "Migrate to alternate disk"
  shell: "nimadm -c {{ nim_client }} -l {{ lpp_source }} -s {{ spot }} -d {{ target_disk }} -Y"
  register: results
  async: "{{ wait_nimadm_timeout_secs }}"
  poll: 0
- debug: #var=results
    msg: "timeout = {{ wait_nimadm_timeout_secs }}"

############################################################
# check on async task later
# perform a task to check on nimadm task via its registered
# job ID
############################################################

- name: "Check on an async task"
  async_status:
    jid: "{{ results.ansible_job_id }}"
  register: async_poll_results
  until: async_poll_results.finished
  retries: "{{ retry_chk_nimadm_comp }}"
  delay: "{{ interval }}"
- debug: #var=async_poll_results
    msg: "retry = {{ retry_chk_nimadm_comp }}"

############################################################
############################################################

- block:
    - name: "Rebooting {{ nim_client }}"
      ibm.power_aix.nim:
        action: reboot
        targets: "{{ nim_client }}"
      register: results
    - debug: var=results
  when: reboot_client

- debug:
    msg: >
      'altinst_rootvg' successfully created in '{{ nim_client }}'.
      Reboot '{{ nim_client }}' to boot into the alterate disk.
  when: not reboot_client

############################################################
############################################################

- debug: msg="MIGRATION COMPLETE!!!"
