# Copyright (c) IBM Corporation 2021
---
# Install pycurl and dependencies

# Do not continue if pycurl and wget are installed.
- name: Verify if pycurl package exists.
  raw: "{{ interpreter_name }} -c 'import pycurl' && echo true || echo false"
  register: pycurl_exists
  changed_when: false

- name: Print a warning to indicate pycurl is installed.
  debug:
     msg: "End play for host {{ aix_host }} because pycurl is installed."
  when: pycurl_exists.stdout is search("true")

- name: Install pycurl if it is not installed
  block:
     # Verify the AIX level is 7.3 or above
     - name: Verify the host is at least aix 7.3, if not, exit host
       raw: "/usr/bin/oslevel  | /usr/bin/awk -F '.' ' { print $1 $2 }'"
       register: output
       changed_when: false

     - name: Fail if AIX release is < 7.3
       fail:
          msg: "End playbook for {{ aix_host }}. Bootstrap pycurl for \
               AIX version {{ output.stdout_lines[0] }} is not supported"
       when: (output.stdout_lines[0] | int) < 73

     # Verify if dnf is installed
     - name: Verify if dnf is installed.
       raw: "rpm -q --quiet dnf && echo true || echo false"
       register: dnf_tools_exists
       changed_when: false

     - name: Fail if dnf is not installed.
       fail:
          msg: "End play for host {{ aix_host }}. The dnf package manager \
               is required to install pycurl. Use power_aix_bootstrap with \
               pkgtype dnf"
       when: dnf_tools_exists.stdout is search("false")

     # Ensure there is enough space to install the tools
     - name: Increase /opt and /var if it is required.
       include_tasks: increase_filesystem.yml
       with_items:
          - {filesystem: "opt", size_needed: "{{ opt_free_size }}"}
          - {filesystem: "var", size_needed: "{{ var_free_size }}"}

     # Install dependencies
     - name: Update AIX Toolsbox's python3. Install gcc, curl-devel,
             python3-devel and curl.
       environment:
          PATH: /opt/freeware/bin
       vars:
          ansible_python_interpreter: "{{ interpreter_name }}"
       dnf:
          name:
             - "gcc"
             - "python3"
             - "curl-devel"
             - "python3-devel"
             - "curl"
          state: latest  # noqa package-latest
       register: dnf_output

     # Install pip
     - name: Install pip  # noqa no-changed-when
       shell: "'{{ interpreter_name }}' -m ensurepip && echo true || echo false"

     - name: Upgrade PIP  # noqa no-changed-when
       command: "'{{ interpreter_name }}' -m pip install --upgrade pip"
       environment:
          PATH: /opt/freeware/bin

     # Install pycurl
     - name: Install pycurl using pip  # noqa no-changed-when
       raw: "export PATH=$PATH:/opt/freeware/bin ; {{ interpreter_name }} -m pip install pycurl"

     - name: Print pycurl installation success.
       debug:
          msg: "pycurl is installed"

# end of block to install pycurl if it is not installed
  when: pycurl_exists.stdout is search("false")
