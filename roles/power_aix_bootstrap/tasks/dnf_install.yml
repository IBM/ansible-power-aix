# Copyright (c) IBM Corporation 2021
---
#   Verify the AIX level is 7.1 or above. Bootstrap dnf is only supported in AIX 7.1 and up.
- name: Verify the host is at least aix 7.1, if not, exit host
  ansible.builtin.raw: /usr/bin/oslevel  | /usr/bin/awk -F '.' ' { print $1 $2 }'
  register: output
  changed_when: false

# Fail if version is less than 7.1
- name: Fail if AIX version is less than 7.1
  ansible.builtin.fail:
    msg: Bootstrap for AIX version {{ output.stdout_lines[0] }} is not supported.
  when: (output.stdout_lines[0] | int) < 71

#   CHECK for DNF on inventory host
- block:
    - name: Check for existence of dnf
      ansible.builtin.raw: /usr/bin/rpm -q --quiet dnf && echo true || echo false
      register: dnf_exists
      changed_when: false

    - name: Print if dnf is installed
      ansible.builtin.debug:
        msg: Exiting the playbook. dnf is already installed
      when: dnf_exists.stdout is search("true")

    - name: Check for existence of yum
      ansible.builtin.raw: /usr/bin/rpm -q --quiet yum && echo true || echo false
      register: yum_exists
      changed_when: false
      when: dnf_exists.stdout is search("false")

# Execute this block if DNF doesn't exist and AIX version is either 7.1 or 7.2
- when: dnf_exists.stdout is search("false") and ((output.stdout_lines[0] | int) == 71 or (output.stdout_lines[0] | int) == 72)

  # Execute this block if DNF doesn't exist and AIX version is 7.3
  block:
    - name: Create target filesystem for image transfer
      ansible.builtin.raw: crfs -v jfs2 -g rootvg -a size=530M -m {{ power_aix_bootstrap_target_dir }} -A yes -p rw
      changed_when: true
    - name: Mount target filesystem
      ansible.builtin.raw: mount {{ power_aix_bootstrap_target_dir }}
      changed_when: true
- when: (output.stdout_lines[0] | int) == 73 and dnf_exists.stdout is search("false")

  # Excute this block if dnf is not installed
  block:
    - name: Set the python interpreter to python3
      ansible.builtin.set_fact:
        ansible_python_interpreter: /usr/bin/python3

    - name: Create target filesystem for image transfer if it does not exist "{{ power_aix_bootstrap_target_dir }}"
      ibm.power_aix.filesystem:
        state: present
        filesystem: "{{ power_aix_bootstrap_target_dir }}"
        fs_type: jfs2
        auto_mount: true # noqa yaml
        attributes: size=530M
        permissions: rw
        vg: rootvg

    - name: Mount target filesystem "{{ power_aix_bootstrap_target_dir }}"
      ibm.power_aix.mount:
        mount_dir: "{{ power_aix_bootstrap_target_dir }}"

- when: dnf_exists.stdout is search("false")

  # { Execute this block if dnf has been installed and proxy needs to be set
  block:
    - name: Copy dnf install script to "{{ power_aix_bootstrap_target_dir }}"
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "{{ power_aix_bootstrap_target_dir }}"
        mode: "0755"
      with_items:
        - files/{{ power_aix_bootstrap_dnf_install_script }}

    - name: Restore dnf bundle to upgrade yum to yum4 if yum is installed.
      ansible.builtin.command: "{{ power_aix_bootstrap_target_dir }}/{{ power_aix_bootstrap_dnf_install_script }} -y {{ power_aix_bootstrap_target_dir }}"
      changed_when: true
      when:
        - yum_exists.stdout is search("true")

    - name: Restore dnf bundle at the target if yum is not installed.
      ansible.builtin.command: "{{ power_aix_bootstrap_target_dir }}/{{ power_aix_bootstrap_dnf_install_script }} -d {{ power_aix_bootstrap_target_dir }}"
      changed_when: true
      when:
        - yum_exists.stdout is not search("true")

    - name: Check if dnf was installed at /opt/freeware/bin
      ansible.builtin.stat:
        path: /opt/freeware/bin/dnf
      register: dnf_installed

    - name: Check if yum link was installed at /opt/freeware/bin
      ansible.builtin.stat:
        path: /opt/freeware/bin/yum
      register: yum_link_installed

    - name: Update "{{ ansible_python_interpreter }}"
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          /usr/bin/yes | /opt/freeware/bin/dnf upgrade python3
      failed_when: false
      changed_when: false
      vars:
        ansible_python_interpreter: "{{ power_aix_bootstrap_interpreter_name }}"
      when:
        - dnf_installed.stat.exists

    - name: Unmount target filesystem "{{ power_aix_bootstrap_target_dir }}"
      ibm.power_aix.mount:
        state: umount
        mount_over_dir: "{{ power_aix_bootstrap_target_dir }}"

    - name: Remove target filesystem "{{ power_aix_bootstrap_target_dir }}"
      ibm.power_aix.filesystem:
        state: absent
        filesystem: "{{ power_aix_bootstrap_target_dir }}"

    - name: Print status
      ansible.builtin.debug:
        msg: Bootstrap attempt of yum upgrade to dnf on {{ power_aix_bootstrap_aix_host }} has completed
      when: yum_link_installed.stat.exists

    - name: Print status
      ansible.builtin.debug:
        msg: Bootstrap attempt of dnf on {{ power_aix_bootstrap_aix_host }} has completed
      when: dnf_installed.stat.exists

#    Block to install dnf }
- when: (dnf_exists.stdout is not search("false") or dnf_installed.stat.exists) and "proxy" is defined
  block:
    - name: Add proxy to /opt/freeware/etc/dnf/dnf.conf
      ansible.builtin.lineinfile:
        path: /opt/freeware/etc/dnf/dnf.conf
        line: proxy={{ power_aix_bootstrap_proxy }}
        insertafter: best=True

  #     Block to set proxy }
